// Automatically generated by MockGen. DO NOT EDIT!
// Source: gitlab.com/yaotsu/core/requestsys (interfaces: Connection)

package mock_requestsys

import (
	gomock "github.com/golang/mock/gomock"
	requestsys "gitlab.com/yaotsu/core/requestsys"
)

// Mock of Connection interface
type MockConnection struct {
	ctrl     *gomock.Controller
	recorder *_MockConnectionRecorder
}

// Recorder for MockConnection (not exported)
type _MockConnectionRecorder struct {
	mock *MockConnection
}

func NewMockConnection(ctrl *gomock.Controller) *MockConnection {
	mock := &MockConnection{ctrl: ctrl}
	mock.recorder = &_MockConnectionRecorder{mock}
	return mock
}

func (_m *MockConnection) EXPECT() *_MockConnectionRecorder {
	return _m.recorder
}

func (_m *MockConnection) CanSend(_param0 *requestsys.Request) *requestsys.ConnError {
	ret := _m.ctrl.Call(_m, "CanSend", _param0)
	ret0, _ := ret[0].(*requestsys.ConnError)
	return ret0
}

func (_mr *_MockConnectionRecorder) CanSend(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "CanSend", arg0)
}

func (_m *MockConnection) Register(_param0 requestsys.Connectable) error {
	ret := _m.ctrl.Call(_m, "Register", _param0)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockConnectionRecorder) Register(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Register", arg0)
}

func (_m *MockConnection) Send(_param0 *requestsys.Request) *requestsys.ConnError {
	ret := _m.ctrl.Call(_m, "Send", _param0)
	ret0, _ := ret[0].(*requestsys.ConnError)
	return ret0
}

func (_mr *_MockConnectionRecorder) Send(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Send", arg0)
}

func (_m *MockConnection) Unregister(_param0 requestsys.Connectable) error {
	ret := _m.ctrl.Call(_m, "Unregister", _param0)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockConnectionRecorder) Unregister(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Unregister", arg0)
}
