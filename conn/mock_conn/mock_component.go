// Automatically generated by MockGen. DO NOT EDIT!
// Source: gitlab.com/yaotsu/core/conn (interfaces: Component)

package mock_conn

import (
	gomock "github.com/golang/mock/gomock"
	conn "gitlab.com/yaotsu/core/conn"
)

// Mock of Component interface
type MockComponent struct {
	ctrl     *gomock.Controller
	recorder *_MockComponentRecorder
}

// Recorder for MockComponent (not exported)
type _MockComponentRecorder struct {
	mock *MockComponent
}

func NewMockComponent(ctrl *gomock.Controller) *MockComponent {
	mock := &MockComponent{ctrl: ctrl}
	mock.recorder = &_MockComponentRecorder{mock}
	return mock
}

func (_m *MockComponent) EXPECT() *_MockComponentRecorder {
	return _m.recorder
}

func (_m *MockComponent) AddPort(_param0 string) error {
	ret := _m.ctrl.Call(_m, "AddPort", _param0)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockComponentRecorder) AddPort(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "AddPort", arg0)
}

func (_m *MockComponent) CanRecv(_param0 *conn.Request) *conn.ConnError {
	ret := _m.ctrl.Call(_m, "CanRecv", _param0)
	ret0, _ := ret[0].(*conn.ConnError)
	return ret0
}

func (_mr *_MockComponentRecorder) CanRecv(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "CanRecv", arg0)
}

func (_m *MockComponent) Connect(_param0 string, _param1 conn.Connection) error {
	ret := _m.ctrl.Call(_m, "Connect", _param0, _param1)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockComponentRecorder) Connect(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Connect", arg0, arg1)
}

func (_m *MockComponent) Disconnect(_param0 string) error {
	ret := _m.ctrl.Call(_m, "Disconnect", _param0)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockComponentRecorder) Disconnect(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Disconnect", arg0)
}

func (_m *MockComponent) GetConnection(_param0 string) conn.Connection {
	ret := _m.ctrl.Call(_m, "GetConnection", _param0)
	ret0, _ := ret[0].(conn.Connection)
	return ret0
}

func (_mr *_MockComponentRecorder) GetConnection(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetConnection", arg0)
}

func (_m *MockComponent) Name() string {
	ret := _m.ctrl.Call(_m, "Name")
	ret0, _ := ret[0].(string)
	return ret0
}

func (_mr *_MockComponentRecorder) Name() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Name")
}

func (_m *MockComponent) Recv(_param0 *conn.Request) *conn.ConnError {
	ret := _m.ctrl.Call(_m, "Recv", _param0)
	ret0, _ := ret[0].(*conn.ConnError)
	return ret0
}

func (_mr *_MockComponentRecorder) Recv(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Recv", arg0)
}
